import bpy
import os
from mathutils import Vector

# 현재 디렉토리 가져오기
current_directory = bpy.path.abspath("//")

# 저장 경로 설정
output_path = os.path.join(current_directory, "exportPNG")

# 디렉토리가 존재하지 않으면 생성
if not os.path.exists(output_path):
    os.makedirs(output_path)

# 현재 활성화된 카메라 가져오기
active_camera = bpy.data.objects[bpy.context.scene.camera.name]
camera_data = active_camera.data

# 배경(월드)를 날리기
bpy.context.scene.world = None

# 렌더링 설정
bpy.context.scene.render.image_settings.file_format = 'PNG'
bpy.context.scene.render.film_transparent = True

# 카메라 위치와 오브젝트의 중심 위치 간의 거리 계산
def get_distance_to_camera(obj):
    return (active_camera.location - obj.location).length

# 오브젝트의 크기를 기반으로 초점 거리를 조절
def adjust_focal_length(obj):
    distance_to_camera = get_distance_to_camera(obj)
    dimension = max(obj.dimensions)
    
    # 가장 큰 차원을 기준으로 초점 거리 조절. 여기서 '2'는 임의의 값이며, 조절이 필요할 수 있습니다.
    camera_data.lens = (distance_to_camera * camera_data.sensor_width) / (5 * dimension)

# 카메라를 오브젝트의 중앙에 위치하게 하는 함수
def center_object_to_camera_view(obj):
    camera_location = active_camera.location
    camera_direction = active_camera.matrix_world.to_quaternion() @ Vector((0, 0, -1))
    object_center = obj.location
    direction_difference = object_center - camera_location
    
    # 오브젝트를 이동하여 카메라 뷰의 중앙에 배치합니다.
    projected_distance = direction_difference.dot(camera_direction.normalized())
    projected_center = camera_location + camera_direction.normalized() * projected_distance
    obj.location = projected_center


for obj in bpy.context.collection.objects:
    # 모든 오브젝트를 숨기기 (빛은 제외)
    for o in bpy.data.objects:
        if o.type != 'LIGHT':
            o.hide_render = True

    # 현재 오브젝트만 렌더링되게 하기
    obj.hide_render = False
    
    # 오브젝트를 카메라 뷰의 중앙에 배치
    center_object_to_camera_view(obj)

    # 오브젝트의 크기에 따라 초점 거리 조절
    adjust_focal_length(obj)

    # 렌더링 저장 경로 및 이름 설정
    bpy.context.scene.render.filepath = os.path.join(output_path, obj.name + ".png")
    
    # 렌더링
    bpy.ops.render.render(write_still=True)

# 원래 상태로 복구
for obj in bpy.data.objects:
    obj.hide_render = False
